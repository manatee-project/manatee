// Code generated by Validator v0.2.5. DO NOT EDIT.

package job

import (
	"bytes"
	"fmt"
	"reflect"
	"regexp"
	"strings"
	"time"
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = (*regexp.Regexp)(nil)
	_ = time.Nanosecond
)

func (p *Job) IsValid() error {
	return nil
}
func (p *Env) IsValid() error {
	return nil
}
func (p *SubmitJobRequest) IsValid() error {
	if p.CPUCount <= int64(1) {
		return fmt.Errorf("field CPUCount gt rule failed, current value: %v", p.CPUCount)
	}
	if p.CPUCount >= int64(256) {
		return fmt.Errorf("field CPUCount lt rule failed, current value: %v", p.CPUCount)
	}
	if p.DiskSize <= int64(20) {
		return fmt.Errorf("field DiskSize gt rule failed, current value: %v", p.DiskSize)
	}
	if p.DiskSize >= int64(1024) {
		return fmt.Errorf("field DiskSize lt rule failed, current value: %v", p.DiskSize)
	}
	return nil
}
func (p *SubmitJobResponse) IsValid() error {
	return nil
}
func (p *QueryJobRequest) IsValid() error {
	return nil
}
func (p *QueryJobResponse) IsValid() error {
	return nil
}
func (p *DeleteJobRequest) IsValid() error {
	return nil
}
func (p *DeleteJobResponse) IsValid() error {
	return nil
}
func (p *DownloadJobOutputRequest) IsValid() error {
	return nil
}
func (p *DownloadJobOutputResponse) IsValid() error {
	return nil
}
func (p *QueryJobAttestationRequest) IsValid() error {
	return nil
}
func (p *QueryJobAttestationResponse) IsValid() error {
	return nil
}
